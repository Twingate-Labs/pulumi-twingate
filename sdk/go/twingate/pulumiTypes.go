// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package twingate

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type TwingateResourceProtocols struct {
	AllowIcmp *bool                        `pulumi:"allowIcmp"`
	Tcp       TwingateResourceProtocolsTcp `pulumi:"tcp"`
	Udp       TwingateResourceProtocolsUdp `pulumi:"udp"`
}

// TwingateResourceProtocolsInput is an input type that accepts TwingateResourceProtocolsArgs and TwingateResourceProtocolsOutput values.
// You can construct a concrete instance of `TwingateResourceProtocolsInput` via:
//
//          TwingateResourceProtocolsArgs{...}
type TwingateResourceProtocolsInput interface {
	pulumi.Input

	ToTwingateResourceProtocolsOutput() TwingateResourceProtocolsOutput
	ToTwingateResourceProtocolsOutputWithContext(context.Context) TwingateResourceProtocolsOutput
}

type TwingateResourceProtocolsArgs struct {
	AllowIcmp pulumi.BoolPtrInput               `pulumi:"allowIcmp"`
	Tcp       TwingateResourceProtocolsTcpInput `pulumi:"tcp"`
	Udp       TwingateResourceProtocolsUdpInput `pulumi:"udp"`
}

func (TwingateResourceProtocolsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TwingateResourceProtocols)(nil)).Elem()
}

func (i TwingateResourceProtocolsArgs) ToTwingateResourceProtocolsOutput() TwingateResourceProtocolsOutput {
	return i.ToTwingateResourceProtocolsOutputWithContext(context.Background())
}

func (i TwingateResourceProtocolsArgs) ToTwingateResourceProtocolsOutputWithContext(ctx context.Context) TwingateResourceProtocolsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TwingateResourceProtocolsOutput)
}

func (i TwingateResourceProtocolsArgs) ToTwingateResourceProtocolsPtrOutput() TwingateResourceProtocolsPtrOutput {
	return i.ToTwingateResourceProtocolsPtrOutputWithContext(context.Background())
}

func (i TwingateResourceProtocolsArgs) ToTwingateResourceProtocolsPtrOutputWithContext(ctx context.Context) TwingateResourceProtocolsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TwingateResourceProtocolsOutput).ToTwingateResourceProtocolsPtrOutputWithContext(ctx)
}

// TwingateResourceProtocolsPtrInput is an input type that accepts TwingateResourceProtocolsArgs, TwingateResourceProtocolsPtr and TwingateResourceProtocolsPtrOutput values.
// You can construct a concrete instance of `TwingateResourceProtocolsPtrInput` via:
//
//          TwingateResourceProtocolsArgs{...}
//
//  or:
//
//          nil
type TwingateResourceProtocolsPtrInput interface {
	pulumi.Input

	ToTwingateResourceProtocolsPtrOutput() TwingateResourceProtocolsPtrOutput
	ToTwingateResourceProtocolsPtrOutputWithContext(context.Context) TwingateResourceProtocolsPtrOutput
}

type twingateResourceProtocolsPtrType TwingateResourceProtocolsArgs

func TwingateResourceProtocolsPtr(v *TwingateResourceProtocolsArgs) TwingateResourceProtocolsPtrInput {
	return (*twingateResourceProtocolsPtrType)(v)
}

func (*twingateResourceProtocolsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TwingateResourceProtocols)(nil)).Elem()
}

func (i *twingateResourceProtocolsPtrType) ToTwingateResourceProtocolsPtrOutput() TwingateResourceProtocolsPtrOutput {
	return i.ToTwingateResourceProtocolsPtrOutputWithContext(context.Background())
}

func (i *twingateResourceProtocolsPtrType) ToTwingateResourceProtocolsPtrOutputWithContext(ctx context.Context) TwingateResourceProtocolsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TwingateResourceProtocolsPtrOutput)
}

type TwingateResourceProtocolsOutput struct{ *pulumi.OutputState }

func (TwingateResourceProtocolsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TwingateResourceProtocols)(nil)).Elem()
}

func (o TwingateResourceProtocolsOutput) ToTwingateResourceProtocolsOutput() TwingateResourceProtocolsOutput {
	return o
}

func (o TwingateResourceProtocolsOutput) ToTwingateResourceProtocolsOutputWithContext(ctx context.Context) TwingateResourceProtocolsOutput {
	return o
}

func (o TwingateResourceProtocolsOutput) ToTwingateResourceProtocolsPtrOutput() TwingateResourceProtocolsPtrOutput {
	return o.ToTwingateResourceProtocolsPtrOutputWithContext(context.Background())
}

func (o TwingateResourceProtocolsOutput) ToTwingateResourceProtocolsPtrOutputWithContext(ctx context.Context) TwingateResourceProtocolsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TwingateResourceProtocols) *TwingateResourceProtocols {
		return &v
	}).(TwingateResourceProtocolsPtrOutput)
}

func (o TwingateResourceProtocolsOutput) AllowIcmp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TwingateResourceProtocols) *bool { return v.AllowIcmp }).(pulumi.BoolPtrOutput)
}

func (o TwingateResourceProtocolsOutput) Tcp() TwingateResourceProtocolsTcpOutput {
	return o.ApplyT(func(v TwingateResourceProtocols) TwingateResourceProtocolsTcp { return v.Tcp }).(TwingateResourceProtocolsTcpOutput)
}

func (o TwingateResourceProtocolsOutput) Udp() TwingateResourceProtocolsUdpOutput {
	return o.ApplyT(func(v TwingateResourceProtocols) TwingateResourceProtocolsUdp { return v.Udp }).(TwingateResourceProtocolsUdpOutput)
}

type TwingateResourceProtocolsPtrOutput struct{ *pulumi.OutputState }

func (TwingateResourceProtocolsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TwingateResourceProtocols)(nil)).Elem()
}

func (o TwingateResourceProtocolsPtrOutput) ToTwingateResourceProtocolsPtrOutput() TwingateResourceProtocolsPtrOutput {
	return o
}

func (o TwingateResourceProtocolsPtrOutput) ToTwingateResourceProtocolsPtrOutputWithContext(ctx context.Context) TwingateResourceProtocolsPtrOutput {
	return o
}

func (o TwingateResourceProtocolsPtrOutput) Elem() TwingateResourceProtocolsOutput {
	return o.ApplyT(func(v *TwingateResourceProtocols) TwingateResourceProtocols {
		if v != nil {
			return *v
		}
		var ret TwingateResourceProtocols
		return ret
	}).(TwingateResourceProtocolsOutput)
}

func (o TwingateResourceProtocolsPtrOutput) AllowIcmp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TwingateResourceProtocols) *bool {
		if v == nil {
			return nil
		}
		return v.AllowIcmp
	}).(pulumi.BoolPtrOutput)
}

func (o TwingateResourceProtocolsPtrOutput) Tcp() TwingateResourceProtocolsTcpPtrOutput {
	return o.ApplyT(func(v *TwingateResourceProtocols) *TwingateResourceProtocolsTcp {
		if v == nil {
			return nil
		}
		return &v.Tcp
	}).(TwingateResourceProtocolsTcpPtrOutput)
}

func (o TwingateResourceProtocolsPtrOutput) Udp() TwingateResourceProtocolsUdpPtrOutput {
	return o.ApplyT(func(v *TwingateResourceProtocols) *TwingateResourceProtocolsUdp {
		if v == nil {
			return nil
		}
		return &v.Udp
	}).(TwingateResourceProtocolsUdpPtrOutput)
}

type TwingateResourceProtocolsTcp struct {
	Policy string   `pulumi:"policy"`
	Ports  []string `pulumi:"ports"`
}

// TwingateResourceProtocolsTcpInput is an input type that accepts TwingateResourceProtocolsTcpArgs and TwingateResourceProtocolsTcpOutput values.
// You can construct a concrete instance of `TwingateResourceProtocolsTcpInput` via:
//
//          TwingateResourceProtocolsTcpArgs{...}
type TwingateResourceProtocolsTcpInput interface {
	pulumi.Input

	ToTwingateResourceProtocolsTcpOutput() TwingateResourceProtocolsTcpOutput
	ToTwingateResourceProtocolsTcpOutputWithContext(context.Context) TwingateResourceProtocolsTcpOutput
}

type TwingateResourceProtocolsTcpArgs struct {
	Policy pulumi.StringInput      `pulumi:"policy"`
	Ports  pulumi.StringArrayInput `pulumi:"ports"`
}

func (TwingateResourceProtocolsTcpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TwingateResourceProtocolsTcp)(nil)).Elem()
}

func (i TwingateResourceProtocolsTcpArgs) ToTwingateResourceProtocolsTcpOutput() TwingateResourceProtocolsTcpOutput {
	return i.ToTwingateResourceProtocolsTcpOutputWithContext(context.Background())
}

func (i TwingateResourceProtocolsTcpArgs) ToTwingateResourceProtocolsTcpOutputWithContext(ctx context.Context) TwingateResourceProtocolsTcpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TwingateResourceProtocolsTcpOutput)
}

func (i TwingateResourceProtocolsTcpArgs) ToTwingateResourceProtocolsTcpPtrOutput() TwingateResourceProtocolsTcpPtrOutput {
	return i.ToTwingateResourceProtocolsTcpPtrOutputWithContext(context.Background())
}

func (i TwingateResourceProtocolsTcpArgs) ToTwingateResourceProtocolsTcpPtrOutputWithContext(ctx context.Context) TwingateResourceProtocolsTcpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TwingateResourceProtocolsTcpOutput).ToTwingateResourceProtocolsTcpPtrOutputWithContext(ctx)
}

// TwingateResourceProtocolsTcpPtrInput is an input type that accepts TwingateResourceProtocolsTcpArgs, TwingateResourceProtocolsTcpPtr and TwingateResourceProtocolsTcpPtrOutput values.
// You can construct a concrete instance of `TwingateResourceProtocolsTcpPtrInput` via:
//
//          TwingateResourceProtocolsTcpArgs{...}
//
//  or:
//
//          nil
type TwingateResourceProtocolsTcpPtrInput interface {
	pulumi.Input

	ToTwingateResourceProtocolsTcpPtrOutput() TwingateResourceProtocolsTcpPtrOutput
	ToTwingateResourceProtocolsTcpPtrOutputWithContext(context.Context) TwingateResourceProtocolsTcpPtrOutput
}

type twingateResourceProtocolsTcpPtrType TwingateResourceProtocolsTcpArgs

func TwingateResourceProtocolsTcpPtr(v *TwingateResourceProtocolsTcpArgs) TwingateResourceProtocolsTcpPtrInput {
	return (*twingateResourceProtocolsTcpPtrType)(v)
}

func (*twingateResourceProtocolsTcpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TwingateResourceProtocolsTcp)(nil)).Elem()
}

func (i *twingateResourceProtocolsTcpPtrType) ToTwingateResourceProtocolsTcpPtrOutput() TwingateResourceProtocolsTcpPtrOutput {
	return i.ToTwingateResourceProtocolsTcpPtrOutputWithContext(context.Background())
}

func (i *twingateResourceProtocolsTcpPtrType) ToTwingateResourceProtocolsTcpPtrOutputWithContext(ctx context.Context) TwingateResourceProtocolsTcpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TwingateResourceProtocolsTcpPtrOutput)
}

type TwingateResourceProtocolsTcpOutput struct{ *pulumi.OutputState }

func (TwingateResourceProtocolsTcpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TwingateResourceProtocolsTcp)(nil)).Elem()
}

func (o TwingateResourceProtocolsTcpOutput) ToTwingateResourceProtocolsTcpOutput() TwingateResourceProtocolsTcpOutput {
	return o
}

func (o TwingateResourceProtocolsTcpOutput) ToTwingateResourceProtocolsTcpOutputWithContext(ctx context.Context) TwingateResourceProtocolsTcpOutput {
	return o
}

func (o TwingateResourceProtocolsTcpOutput) ToTwingateResourceProtocolsTcpPtrOutput() TwingateResourceProtocolsTcpPtrOutput {
	return o.ToTwingateResourceProtocolsTcpPtrOutputWithContext(context.Background())
}

func (o TwingateResourceProtocolsTcpOutput) ToTwingateResourceProtocolsTcpPtrOutputWithContext(ctx context.Context) TwingateResourceProtocolsTcpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TwingateResourceProtocolsTcp) *TwingateResourceProtocolsTcp {
		return &v
	}).(TwingateResourceProtocolsTcpPtrOutput)
}

func (o TwingateResourceProtocolsTcpOutput) Policy() pulumi.StringOutput {
	return o.ApplyT(func(v TwingateResourceProtocolsTcp) string { return v.Policy }).(pulumi.StringOutput)
}

func (o TwingateResourceProtocolsTcpOutput) Ports() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TwingateResourceProtocolsTcp) []string { return v.Ports }).(pulumi.StringArrayOutput)
}

type TwingateResourceProtocolsTcpPtrOutput struct{ *pulumi.OutputState }

func (TwingateResourceProtocolsTcpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TwingateResourceProtocolsTcp)(nil)).Elem()
}

func (o TwingateResourceProtocolsTcpPtrOutput) ToTwingateResourceProtocolsTcpPtrOutput() TwingateResourceProtocolsTcpPtrOutput {
	return o
}

func (o TwingateResourceProtocolsTcpPtrOutput) ToTwingateResourceProtocolsTcpPtrOutputWithContext(ctx context.Context) TwingateResourceProtocolsTcpPtrOutput {
	return o
}

func (o TwingateResourceProtocolsTcpPtrOutput) Elem() TwingateResourceProtocolsTcpOutput {
	return o.ApplyT(func(v *TwingateResourceProtocolsTcp) TwingateResourceProtocolsTcp {
		if v != nil {
			return *v
		}
		var ret TwingateResourceProtocolsTcp
		return ret
	}).(TwingateResourceProtocolsTcpOutput)
}

func (o TwingateResourceProtocolsTcpPtrOutput) Policy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TwingateResourceProtocolsTcp) *string {
		if v == nil {
			return nil
		}
		return &v.Policy
	}).(pulumi.StringPtrOutput)
}

func (o TwingateResourceProtocolsTcpPtrOutput) Ports() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *TwingateResourceProtocolsTcp) []string {
		if v == nil {
			return nil
		}
		return v.Ports
	}).(pulumi.StringArrayOutput)
}

type TwingateResourceProtocolsUdp struct {
	Policy string   `pulumi:"policy"`
	Ports  []string `pulumi:"ports"`
}

// TwingateResourceProtocolsUdpInput is an input type that accepts TwingateResourceProtocolsUdpArgs and TwingateResourceProtocolsUdpOutput values.
// You can construct a concrete instance of `TwingateResourceProtocolsUdpInput` via:
//
//          TwingateResourceProtocolsUdpArgs{...}
type TwingateResourceProtocolsUdpInput interface {
	pulumi.Input

	ToTwingateResourceProtocolsUdpOutput() TwingateResourceProtocolsUdpOutput
	ToTwingateResourceProtocolsUdpOutputWithContext(context.Context) TwingateResourceProtocolsUdpOutput
}

type TwingateResourceProtocolsUdpArgs struct {
	Policy pulumi.StringInput      `pulumi:"policy"`
	Ports  pulumi.StringArrayInput `pulumi:"ports"`
}

func (TwingateResourceProtocolsUdpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TwingateResourceProtocolsUdp)(nil)).Elem()
}

func (i TwingateResourceProtocolsUdpArgs) ToTwingateResourceProtocolsUdpOutput() TwingateResourceProtocolsUdpOutput {
	return i.ToTwingateResourceProtocolsUdpOutputWithContext(context.Background())
}

func (i TwingateResourceProtocolsUdpArgs) ToTwingateResourceProtocolsUdpOutputWithContext(ctx context.Context) TwingateResourceProtocolsUdpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TwingateResourceProtocolsUdpOutput)
}

func (i TwingateResourceProtocolsUdpArgs) ToTwingateResourceProtocolsUdpPtrOutput() TwingateResourceProtocolsUdpPtrOutput {
	return i.ToTwingateResourceProtocolsUdpPtrOutputWithContext(context.Background())
}

func (i TwingateResourceProtocolsUdpArgs) ToTwingateResourceProtocolsUdpPtrOutputWithContext(ctx context.Context) TwingateResourceProtocolsUdpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TwingateResourceProtocolsUdpOutput).ToTwingateResourceProtocolsUdpPtrOutputWithContext(ctx)
}

// TwingateResourceProtocolsUdpPtrInput is an input type that accepts TwingateResourceProtocolsUdpArgs, TwingateResourceProtocolsUdpPtr and TwingateResourceProtocolsUdpPtrOutput values.
// You can construct a concrete instance of `TwingateResourceProtocolsUdpPtrInput` via:
//
//          TwingateResourceProtocolsUdpArgs{...}
//
//  or:
//
//          nil
type TwingateResourceProtocolsUdpPtrInput interface {
	pulumi.Input

	ToTwingateResourceProtocolsUdpPtrOutput() TwingateResourceProtocolsUdpPtrOutput
	ToTwingateResourceProtocolsUdpPtrOutputWithContext(context.Context) TwingateResourceProtocolsUdpPtrOutput
}

type twingateResourceProtocolsUdpPtrType TwingateResourceProtocolsUdpArgs

func TwingateResourceProtocolsUdpPtr(v *TwingateResourceProtocolsUdpArgs) TwingateResourceProtocolsUdpPtrInput {
	return (*twingateResourceProtocolsUdpPtrType)(v)
}

func (*twingateResourceProtocolsUdpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TwingateResourceProtocolsUdp)(nil)).Elem()
}

func (i *twingateResourceProtocolsUdpPtrType) ToTwingateResourceProtocolsUdpPtrOutput() TwingateResourceProtocolsUdpPtrOutput {
	return i.ToTwingateResourceProtocolsUdpPtrOutputWithContext(context.Background())
}

func (i *twingateResourceProtocolsUdpPtrType) ToTwingateResourceProtocolsUdpPtrOutputWithContext(ctx context.Context) TwingateResourceProtocolsUdpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TwingateResourceProtocolsUdpPtrOutput)
}

type TwingateResourceProtocolsUdpOutput struct{ *pulumi.OutputState }

func (TwingateResourceProtocolsUdpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TwingateResourceProtocolsUdp)(nil)).Elem()
}

func (o TwingateResourceProtocolsUdpOutput) ToTwingateResourceProtocolsUdpOutput() TwingateResourceProtocolsUdpOutput {
	return o
}

func (o TwingateResourceProtocolsUdpOutput) ToTwingateResourceProtocolsUdpOutputWithContext(ctx context.Context) TwingateResourceProtocolsUdpOutput {
	return o
}

func (o TwingateResourceProtocolsUdpOutput) ToTwingateResourceProtocolsUdpPtrOutput() TwingateResourceProtocolsUdpPtrOutput {
	return o.ToTwingateResourceProtocolsUdpPtrOutputWithContext(context.Background())
}

func (o TwingateResourceProtocolsUdpOutput) ToTwingateResourceProtocolsUdpPtrOutputWithContext(ctx context.Context) TwingateResourceProtocolsUdpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TwingateResourceProtocolsUdp) *TwingateResourceProtocolsUdp {
		return &v
	}).(TwingateResourceProtocolsUdpPtrOutput)
}

func (o TwingateResourceProtocolsUdpOutput) Policy() pulumi.StringOutput {
	return o.ApplyT(func(v TwingateResourceProtocolsUdp) string { return v.Policy }).(pulumi.StringOutput)
}

func (o TwingateResourceProtocolsUdpOutput) Ports() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TwingateResourceProtocolsUdp) []string { return v.Ports }).(pulumi.StringArrayOutput)
}

type TwingateResourceProtocolsUdpPtrOutput struct{ *pulumi.OutputState }

func (TwingateResourceProtocolsUdpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TwingateResourceProtocolsUdp)(nil)).Elem()
}

func (o TwingateResourceProtocolsUdpPtrOutput) ToTwingateResourceProtocolsUdpPtrOutput() TwingateResourceProtocolsUdpPtrOutput {
	return o
}

func (o TwingateResourceProtocolsUdpPtrOutput) ToTwingateResourceProtocolsUdpPtrOutputWithContext(ctx context.Context) TwingateResourceProtocolsUdpPtrOutput {
	return o
}

func (o TwingateResourceProtocolsUdpPtrOutput) Elem() TwingateResourceProtocolsUdpOutput {
	return o.ApplyT(func(v *TwingateResourceProtocolsUdp) TwingateResourceProtocolsUdp {
		if v != nil {
			return *v
		}
		var ret TwingateResourceProtocolsUdp
		return ret
	}).(TwingateResourceProtocolsUdpOutput)
}

func (o TwingateResourceProtocolsUdpPtrOutput) Policy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TwingateResourceProtocolsUdp) *string {
		if v == nil {
			return nil
		}
		return &v.Policy
	}).(pulumi.StringPtrOutput)
}

func (o TwingateResourceProtocolsUdpPtrOutput) Ports() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *TwingateResourceProtocolsUdp) []string {
		if v == nil {
			return nil
		}
		return v.Ports
	}).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*TwingateResourceProtocolsInput)(nil)).Elem(), TwingateResourceProtocolsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TwingateResourceProtocolsPtrInput)(nil)).Elem(), TwingateResourceProtocolsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TwingateResourceProtocolsTcpInput)(nil)).Elem(), TwingateResourceProtocolsTcpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TwingateResourceProtocolsTcpPtrInput)(nil)).Elem(), TwingateResourceProtocolsTcpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TwingateResourceProtocolsUdpInput)(nil)).Elem(), TwingateResourceProtocolsUdpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TwingateResourceProtocolsUdpPtrInput)(nil)).Elem(), TwingateResourceProtocolsUdpArgs{})
	pulumi.RegisterOutputType(TwingateResourceProtocolsOutput{})
	pulumi.RegisterOutputType(TwingateResourceProtocolsPtrOutput{})
	pulumi.RegisterOutputType(TwingateResourceProtocolsTcpOutput{})
	pulumi.RegisterOutputType(TwingateResourceProtocolsTcpPtrOutput{})
	pulumi.RegisterOutputType(TwingateResourceProtocolsUdpOutput{})
	pulumi.RegisterOutputType(TwingateResourceProtocolsUdpPtrOutput{})
}
