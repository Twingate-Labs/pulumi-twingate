{
    "name": "twingate",
    "displayName": "Twingate",
    "description": "A Pulumi package for creating and managing Twingate cloud resources.",
    "keywords": [
        "pulumi",
        "twingate",
        "category/Infrastructure"
    ],
    "homepage": "https://www.pulumi.com",
    "license": "Apache-2.0",
    "attribution": "This Pulumi package is based on the [`twingate` Terraform Provider](https://github.com/Twingate-Labs/terraform-provider-twingate).",
    "repository": "https://github.com/Twingate-Labs/pulumi-twingate",
    "publisher": "Twingate",
    "meta": {
        "moduleFormat": "(.*)(?:/[^/]*)"
    },
    "config": {
        "variables": {
            "apiToken": {
                "type": "string",
                "description": "The access key for API operations. You can retrieve this from the Twingate Admin Console\n([documentation](https://docs.twingate.com/docs/api-overview)). Alternatively, this can be specified using the\nTWINGATE_API_TOKEN environment variable.\n"
            },
            "httpMaxRetry": {
                "type": "integer",
                "description": "Specifies a retry limit for the http requests made. This setting is 5. Alternatively, this can be specified using the\nTWINGATE_HTTP_MAX_RETRY environment variable\n",
                "default": 5
            },
            "httpTimeout": {
                "type": "integer",
                "description": "Specifies a time limit in seconds for the http requests made. The default value is 10 seconds. Alternatively, this can\nbe specified using the TWINGATE_HTTP_TIMEOUT environment variable\n",
                "default": 10
            },
            "network": {
                "type": "string",
                "description": "Your Twingate network ID for API operations. You can find it in the Admin Console URL, for example:\n`autoco.twingate.com`, where `autoco` is your network ID Alternatively, this can be specified using the TWINGATE_NETWORK\nenvironment variable.\n"
            },
            "url": {
                "type": "string",
                "description": "The default is 'twingate.com' This is optional and shouldn't be changed under normal circumstances.\n"
            }
        }
    },
    "types": {
        "twingate:index/TwingateResourceProtocols:TwingateResourceProtocols": {
            "properties": {
                "allowIcmp": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tcp": {
                    "$ref": "#/types/twingate:index/TwingateResourceProtocolsTcp:TwingateResourceProtocolsTcp",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "udp": {
                    "$ref": "#/types/twingate:index/TwingateResourceProtocolsUdp:TwingateResourceProtocolsUdp",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "tcp",
                "udp"
            ]
        },
        "twingate:index/TwingateResourceProtocolsTcp:TwingateResourceProtocolsTcp": {
            "properties": {
                "policy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ports": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "policy"
            ]
        },
        "twingate:index/TwingateResourceProtocolsUdp:TwingateResourceProtocolsUdp": {
            "properties": {
                "policy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ports": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "policy"
            ]
        }
    },
    "provider": {
        "description": "The provider type for the twingate package. By default, resources use package-wide configuration\nsettings, however an explicit `Provider` instance may be created and passed during resource\nconstruction to achieve fine-grained programmatic control over provider settings. See the\n[documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.\n",
        "properties": {
            "apiToken": {
                "type": "string",
                "description": "The access key for API operations. You can retrieve this from the Twingate Admin Console\n([documentation](https://docs.twingate.com/docs/api-overview)). Alternatively, this can be specified using the\nTWINGATE_API_TOKEN environment variable.\n"
            },
            "httpMaxRetry": {
                "type": "integer",
                "description": "Specifies a retry limit for the http requests made. This setting is 5. Alternatively, this can be specified using the\nTWINGATE_HTTP_MAX_RETRY environment variable\n"
            },
            "httpTimeout": {
                "type": "integer",
                "description": "Specifies a time limit in seconds for the http requests made. The default value is 10 seconds. Alternatively, this can\nbe specified using the TWINGATE_HTTP_TIMEOUT environment variable\n"
            },
            "network": {
                "type": "string",
                "description": "Your Twingate network ID for API operations. You can find it in the Admin Console URL, for example:\n`autoco.twingate.com`, where `autoco` is your network ID Alternatively, this can be specified using the TWINGATE_NETWORK\nenvironment variable.\n"
            },
            "url": {
                "type": "string",
                "description": "The default is 'twingate.com' This is optional and shouldn't be changed under normal circumstances.\n"
            }
        },
        "inputProperties": {
            "apiToken": {
                "type": "string",
                "description": "The access key for API operations. You can retrieve this from the Twingate Admin Console\n([documentation](https://docs.twingate.com/docs/api-overview)). Alternatively, this can be specified using the\nTWINGATE_API_TOKEN environment variable.\n"
            },
            "httpMaxRetry": {
                "type": "integer",
                "description": "Specifies a retry limit for the http requests made. This setting is 5. Alternatively, this can be specified using the\nTWINGATE_HTTP_MAX_RETRY environment variable\n",
                "default": 5
            },
            "httpTimeout": {
                "type": "integer",
                "description": "Specifies a time limit in seconds for the http requests made. The default value is 10 seconds. Alternatively, this can\nbe specified using the TWINGATE_HTTP_TIMEOUT environment variable\n",
                "default": 10
            },
            "network": {
                "type": "string",
                "description": "Your Twingate network ID for API operations. You can find it in the Admin Console URL, for example:\n`autoco.twingate.com`, where `autoco` is your network ID Alternatively, this can be specified using the TWINGATE_NETWORK\nenvironment variable.\n"
            },
            "url": {
                "type": "string",
                "description": "The default is 'twingate.com' This is optional and shouldn't be changed under normal circumstances.\n"
            }
        }
    },
    "resources": {
        "twingate:index/twingateConnector:TwingateConnector": {
            "description": "Connectors provide connectivity to Remote Networks. This resource type will create the Connector in the Twingate Admin Console, but in order to successfully deploy it, you must also generate Connector tokens that authenticate the Connector with Twingate. For more information, see Twingate's [documentation](https://docs.twingate.com/docs/understanding-access-nodes).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as pulumi_twingate from \"@twingate-labs/pulumi-twingate\";\n\nconst awsNetwork = new twingate.TwingateRemoteNetwork(\"awsNetwork\", {});\nconst awsConnector = new twingate.TwingateConnector(\"awsConnector\", {remoteNetworkId: awsNetwork.id});\n```\n```python\nimport pulumi\nimport pulumi_twingate as twingate\n\naws_network = twingate.TwingateRemoteNetwork(\"awsNetwork\")\naws_connector = twingate.TwingateConnector(\"awsConnector\", remote_network_id=aws_network.id)\n```\n```csharp\nusing Pulumi;\nusing Twingate = TwingateLabs.Twingate;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var awsNetwork = new Twingate.TwingateRemoteNetwork(\"awsNetwork\", new Twingate.TwingateRemoteNetworkArgs\n        {\n        });\n        var awsConnector = new Twingate.TwingateConnector(\"awsConnector\", new Twingate.TwingateConnectorArgs\n        {\n            RemoteNetworkId = awsNetwork.Id,\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/Twingate-Labs/pulumi-twingate/sdk/go/twingate\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tawsNetwork, err := twingate.NewTwingateRemoteNetwork(ctx, \"awsNetwork\", nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = twingate.NewTwingateConnector(ctx, \"awsConnector\", \u0026twingate.TwingateConnectorArgs{\n\t\t\tRemoteNetworkId: awsNetwork.ID(),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import twingate:index/twingateConnector:TwingateConnector connector Q29ubmVjdG1b0qe0\n```\n\n ",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name of the Connector, if not provided one will be generated\n"
                },
                "remoteNetworkId": {
                    "type": "string",
                    "description": "The ID of the Remote Network to attach the Connector to\n"
                }
            },
            "required": [
                "name",
                "remoteNetworkId"
            ],
            "inputProperties": {
                "name": {
                    "type": "string",
                    "description": "Name of the Connector, if not provided one will be generated\n"
                },
                "remoteNetworkId": {
                    "type": "string",
                    "description": "The ID of the Remote Network to attach the Connector to\n"
                }
            },
            "requiredInputs": [
                "remoteNetworkId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering TwingateConnector resources.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the Connector, if not provided one will be generated\n"
                    },
                    "remoteNetworkId": {
                        "type": "string",
                        "description": "The ID of the Remote Network to attach the Connector to\n"
                    }
                },
                "type": "object"
            }
        },
        "twingate:index/twingateConnectorTokens:TwingateConnectorTokens": {
            "description": "This resource type will generate tokens for a Connector, which are needed to successfully provision one on your network. The Connector itself has its own resource type and must be created before you can provision tokens.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as pulumi_twingate from \"@twingate-labs/pulumi-twingate\";\n\nconst awsNetwork = new twingate.TwingateRemoteNetwork(\"awsNetwork\", {});\nconst awsConnector = new twingate.TwingateConnector(\"awsConnector\", {remoteNetworkId: awsNetwork.id});\nconst awsConnectorTokens = new twingate.TwingateConnectorTokens(\"awsConnectorTokens\", {connectorId: awsConnector.id});\n```\n```python\nimport pulumi\nimport pulumi_twingate as twingate\n\naws_network = twingate.TwingateRemoteNetwork(\"awsNetwork\")\naws_connector = twingate.TwingateConnector(\"awsConnector\", remote_network_id=aws_network.id)\naws_connector_tokens = twingate.TwingateConnectorTokens(\"awsConnectorTokens\", connector_id=aws_connector.id)\n```\n```csharp\nusing Pulumi;\nusing Twingate = TwingateLabs.Twingate;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var awsNetwork = new Twingate.TwingateRemoteNetwork(\"awsNetwork\", new Twingate.TwingateRemoteNetworkArgs\n        {\n        });\n        var awsConnector = new Twingate.TwingateConnector(\"awsConnector\", new Twingate.TwingateConnectorArgs\n        {\n            RemoteNetworkId = awsNetwork.Id,\n        });\n        var awsConnectorTokens = new Twingate.TwingateConnectorTokens(\"awsConnectorTokens\", new Twingate.TwingateConnectorTokensArgs\n        {\n            ConnectorId = awsConnector.Id,\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/Twingate-Labs/pulumi-twingate/sdk/go/twingate\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tawsNetwork, err := twingate.NewTwingateRemoteNetwork(ctx, \"awsNetwork\", nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tawsConnector, err := twingate.NewTwingateConnector(ctx, \"awsConnector\", \u0026twingate.TwingateConnectorArgs{\n\t\t\tRemoteNetworkId: awsNetwork.ID(),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = twingate.NewTwingateConnectorTokens(ctx, \"awsConnectorTokens\", \u0026twingate.TwingateConnectorTokensArgs{\n\t\t\tConnectorId: awsConnector.ID(),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "accessToken": {
                    "type": "string",
                    "description": "The Access Token of the parent Connector\n"
                },
                "connectorId": {
                    "type": "string",
                    "description": "The ID of the parent Connector\n"
                },
                "keepers": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "Arbitrary map of values that, when changed, will trigger recreation of resource. Use this to automatically rotate\nConnector tokens on a schedule.\n"
                },
                "refreshToken": {
                    "type": "string",
                    "description": "The Refresh Token of the parent Connector\n"
                }
            },
            "required": [
                "accessToken",
                "connectorId",
                "refreshToken"
            ],
            "inputProperties": {
                "connectorId": {
                    "type": "string",
                    "description": "The ID of the parent Connector\n"
                },
                "keepers": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "Arbitrary map of values that, when changed, will trigger recreation of resource. Use this to automatically rotate\nConnector tokens on a schedule.\n"
                }
            },
            "requiredInputs": [
                "connectorId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering TwingateConnectorTokens resources.\n",
                "properties": {
                    "accessToken": {
                        "type": "string",
                        "description": "The Access Token of the parent Connector\n"
                    },
                    "connectorId": {
                        "type": "string",
                        "description": "The ID of the parent Connector\n"
                    },
                    "keepers": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "pulumi.json#/Any"
                        },
                        "description": "Arbitrary map of values that, when changed, will trigger recreation of resource. Use this to automatically rotate\nConnector tokens on a schedule.\n"
                    },
                    "refreshToken": {
                        "type": "string",
                        "description": "The Refresh Token of the parent Connector\n"
                    }
                },
                "type": "object"
            }
        },
        "twingate:index/twingateRemoteNetwork:TwingateRemoteNetwork": {
            "description": "A Remote Network represents a single private network in Twingate that can have one or more Connectors and Resources assigned to it. You must create a Remote Network before creating Resources and Connectors that belong to it. For more information, see Twingate's [documentation](https://docs.twingate.com/docs/remote-networks).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as twingate from \"@pulumi/twingate\";\n\nconst awsNetwork = new twingate.TwingateRemoteNetwork(\"aws_network\", {});\n```\n```python\nimport pulumi\nimport pulumi_twingate as twingate\n\naws_network = twingate.TwingateRemoteNetwork(\"awsNetwork\")\n```\n```csharp\nusing Pulumi;\nusing Twingate = TwingateLabs.Twingate;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var awsNetwork = new Twingate.TwingateRemoteNetwork(\"awsNetwork\", new Twingate.TwingateRemoteNetworkArgs\n        {\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/Twingate-Labs/pulumi-twingate/sdk/go/twingate\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := twingate.NewTwingateRemoteNetwork(ctx, \"awsNetwork\", nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import twingate:index/twingateRemoteNetwork:TwingateRemoteNetwork network UmVtb3RlTmV0d29zaipgMKIkNg==\n```\n\n ",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the Remote Network\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "name": {
                    "type": "string",
                    "description": "The name of the Remote Network\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering TwingateRemoteNetwork resources.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the Remote Network\n"
                    }
                },
                "type": "object"
            }
        },
        "twingate:index/twingateResource:TwingateResource": {
            "description": "Resources in Twingate represent servers on the private network that clients can connect to. Resources can be defined by IP, CIDR range, FQDN, or DNS zone. For more information, see the Twingate [documentation](https://docs.twingate.com/docs/resources-and-access-nodes).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as pulumi_twingate from \"@twingate-labs/pulumi-twingate\";\n\nconst awsNetwork = new twingate.TwingateRemoteNetwork(\"awsNetwork\", {});\nconst resource = new twingate.TwingateResource(\"resource\", {\n    address: \"internal.int\",\n    remoteNetworkId: awsNetwork.id,\n    groupIds: [\"group1\"],\n    protocols: {\n        allowIcmp: true,\n        tcp: {\n            policy: \"RESTRICTED\",\n            ports: [\n                \"80\",\n                \"82-83\",\n            ],\n        },\n        udp: {\n            policy: \"ALLOW_ALL\",\n        },\n    },\n});\n```\n```python\nimport pulumi\nimport pulumi_twingate as twingate\n\naws_network = twingate.TwingateRemoteNetwork(\"awsNetwork\")\nresource = twingate.TwingateResource(\"resource\",\n    address=\"internal.int\",\n    remote_network_id=aws_network.id,\n    group_ids=[\"group1\"],\n    protocols=twingate.TwingateResourceProtocolsArgs(\n        allow_icmp=True,\n        tcp=twingate.TwingateResourceProtocolsTcpArgs(\n            policy=\"RESTRICTED\",\n            ports=[\n                \"80\",\n                \"82-83\",\n            ],\n        ),\n        udp=twingate.TwingateResourceProtocolsUdpArgs(\n            policy=\"ALLOW_ALL\",\n        ),\n    ))\n```\n```csharp\nusing Pulumi;\nusing Twingate = TwingateLabs.Twingate;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var awsNetwork = new Twingate.TwingateRemoteNetwork(\"awsNetwork\", new Twingate.TwingateRemoteNetworkArgs\n        {\n        });\n        var resource = new Twingate.TwingateResource(\"resource\", new Twingate.TwingateResourceArgs\n        {\n            Address = \"internal.int\",\n            RemoteNetworkId = awsNetwork.Id,\n            GroupIds = \n            {\n                \"group1\",\n            },\n            Protocols = new Twingate.Inputs.TwingateResourceProtocolsArgs\n            {\n                AllowIcmp = true,\n                Tcp = new Twingate.Inputs.TwingateResourceProtocolsTcpArgs\n                {\n                    Policy = \"RESTRICTED\",\n                    Ports = \n                    {\n                        \"80\",\n                        \"82-83\",\n                    },\n                },\n                Udp = new Twingate.Inputs.TwingateResourceProtocolsUdpArgs\n                {\n                    Policy = \"ALLOW_ALL\",\n                },\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/Twingate-Labs/pulumi-twingate/sdk/go/twingate\"\n\t\"github.com/pulumi/pulumi-twingate/sdk/go/twingate\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tawsNetwork, err := twingate.NewTwingateRemoteNetwork(ctx, \"awsNetwork\", nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = twingate.NewTwingateResource(ctx, \"resource\", \u0026twingate.TwingateResourceArgs{\n\t\t\tAddress:         pulumi.String(\"internal.int\"),\n\t\t\tRemoteNetworkId: awsNetwork.ID(),\n\t\t\tGroupIds: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"group1\"),\n\t\t\t},\n\t\t\tProtocols: \u0026TwingateResourceProtocolsArgs{\n\t\t\t\tAllowIcmp: pulumi.Bool(true),\n\t\t\t\tTcp: \u0026TwingateResourceProtocolsTcpArgs{\n\t\t\t\t\tPolicy: pulumi.String(\"RESTRICTED\"),\n\t\t\t\t\tPorts: pulumi.StringArray{\n\t\t\t\t\t\tpulumi.String(\"80\"),\n\t\t\t\t\t\tpulumi.String(\"82-83\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tUdp: \u0026TwingateResourceProtocolsUdpArgs{\n\t\t\t\t\tPolicy: pulumi.String(\"ALLOW_ALL\"),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "address": {
                    "type": "string",
                    "description": "The Resource's IP/CIDR or FQDN/DNS zone\n"
                },
                "groupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of Group IDs that have permission to access the Resource, cannot be generated by Terraform and must be retrieved\nfrom the Twingate Admin Console or API\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the Resource\n"
                },
                "protocols": {
                    "$ref": "#/types/twingate:index/TwingateResourceProtocols:TwingateResourceProtocols",
                    "description": "Restrict access to certain protocols and ports. By default or when this argument is not defined, there is no\nrestriction, and all protocols and ports are allowed.\n"
                },
                "remoteNetworkId": {
                    "type": "string",
                    "description": "Remote Network ID where the Resource lives\n"
                }
            },
            "required": [
                "address",
                "name",
                "remoteNetworkId"
            ],
            "inputProperties": {
                "address": {
                    "type": "string",
                    "description": "The Resource's IP/CIDR or FQDN/DNS zone\n"
                },
                "groupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of Group IDs that have permission to access the Resource, cannot be generated by Terraform and must be retrieved\nfrom the Twingate Admin Console or API\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the Resource\n"
                },
                "protocols": {
                    "$ref": "#/types/twingate:index/TwingateResourceProtocols:TwingateResourceProtocols",
                    "description": "Restrict access to certain protocols and ports. By default or when this argument is not defined, there is no\nrestriction, and all protocols and ports are allowed.\n"
                },
                "remoteNetworkId": {
                    "type": "string",
                    "description": "Remote Network ID where the Resource lives\n"
                }
            },
            "requiredInputs": [
                "address",
                "remoteNetworkId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering TwingateResource resources.\n",
                "properties": {
                    "address": {
                        "type": "string",
                        "description": "The Resource's IP/CIDR or FQDN/DNS zone\n"
                    },
                    "groupIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of Group IDs that have permission to access the Resource, cannot be generated by Terraform and must be retrieved\nfrom the Twingate Admin Console or API\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the Resource\n"
                    },
                    "protocols": {
                        "$ref": "#/types/twingate:index/TwingateResourceProtocols:TwingateResourceProtocols",
                        "description": "Restrict access to certain protocols and ports. By default or when this argument is not defined, there is no\nrestriction, and all protocols and ports are allowed.\n"
                    },
                    "remoteNetworkId": {
                        "type": "string",
                        "description": "Remote Network ID where the Resource lives\n"
                    }
                },
                "type": "object"
            }
        }
    },
    "language": {
        "csharp": {
            "compatibility": "tfbridge20",
            "namespaces": null,
            "packageReferences": {
                "Pulumi": "3.*"
            },
            "rootNamespace": "TwingateLabs"
        },
        "go": {
            "generateExtraInputTypes": true,
            "generateResourceContainerTypes": true,
            "importBasePath": "github.com/Twingate-Labs/pulumi-twingate/sdk/go/twingate"
        },
        "nodejs": {
            "compatibility": "tfbridge20",
            "dependencies": {
                "@pulumi/pulumi": "^3.0.0"
            },
            "devDependencies": {
                "@types/mime": "^2.0.0",
                "@types/node": "^10.0.0"
            },
            "disableUnionOutputTypes": true,
            "packageDescription": "A Pulumi package for creating and managing Twingate cloud resources.",
            "packageName": "@twingate-labs/pulumi-twingate",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/Twingate-Labs/terraform-provider-twingate)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi/pulumi-twingate` repo](https://github.com/pulumi/pulumi-twingate/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`Twingate-Labs/terraform-provider-twingate` repo](https://github.com/Twingate-Labs/terraform-provider-twingate/issues).",
            "typescriptVersion": ""
        },
        "python": {
            "compatibility": "tfbridge20",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/Twingate-Labs/terraform-provider-twingate)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi/pulumi-twingate` repo](https://github.com/pulumi/pulumi-twingate/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`Twingate-Labs/terraform-provider-twingate` repo](https://github.com/Twingate-Labs/terraform-provider-twingate/issues).",
            "requires": {
                "pulumi": "\u003e=3.0.0,\u003c4.0.0"
            }
        }
    }
}